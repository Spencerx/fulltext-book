[
["index.html", "fulltext manual Chapter 1 fulltext manual 1.1 Info 1.2 Citing fulltext 1.3 Installation", " fulltext manual 2017-12-19 Chapter 1 fulltext manual An R package to search across and get full text for open access journals The fulltext package makes it easy to do text-mining by supporting the following steps: Search for articles Fetch articles Get links for full text articles (xml, pdf) Extract text from articles / convert formats Collect bits of articles that you actually need Download supplementary materials from papers 1.1 Info Code: https://github.com/ropensci/fulltext/ Issues: https://github.com/ropensci/fulltext/issues CRAN: https://cran.rstudio.com/web/packages/fulltext/ 1.2 Citing fulltext Scott Chamberlain &amp; Will Pearse (2017). fulltext: Full Text of ‘Scholarly’ Articles Across Many Data Sources. R package version 0.1.9.9621. https://github.com/ropensci/fulltext 1.3 Installation Stable version from CRAN install.packages(&quot;fulltext&quot;) Development version from GitHub devtools::install_github(&quot;ropensci/fulltext&quot;) Load library library(&#39;fulltext&#39;) "],
["intro.html", "Chapter 2 Introduction 2.1 User interface", " Chapter 2 Introduction 2.1 User interface Functions in fulltext are setup to make the package as easy to use as possible. The functions are organized around use cases: Search for articles Get full text links Get articles Get abstracts Pull out article sections of interest Because there are so many data sources for scholarly texts, it makes a lot of sense to simplify the details of each data source, and present a single user interface to all of them. "],
["data-sources.html", "Chapter 3 Data sources", " Chapter 3 Data sources Data sources in fulltext include: Crossref - via the rcrossref package Public Library of Science (PLOS) - via the rplos package Biomed Central arXiv - via the aRxiv package bioRxiv - via the biorxivr package PMC/Pubmed via Entrez - via the rentrez package Many more are supported via the above sources (e.g., Royal Society Open Science is available via Pubmed) We will add more, as publishers open up, and as we have time…See the master list here "],
["authentication.html", "Chapter 4 Authentication", " Chapter 4 Authentication Some data sources require authentication. Here’s a breakdown of how to do authentication by data source: BMC: BMC is integrated into Springer Publishers now, and that API requires an API key. Get your key by signing up at https://dev.springer.com/, then you’ll get a key. Pass the key to a named parameter key to bmcopts. Or, save your key in your .Renviron file as SPRINGER_KEY, and we’ll read it in for you, and you don’t have to pass in anything. Scopus: Scopus requires an API key to search their service. Go to https://dev.elsevier.com/index.html, register for an account, then when you’re in your account, create an API key. Pass in as variable key to scopusopts, or store your key under the name ELSEVIER_SCOPUS_KEY as an environment variable in .Renviron, and we’ll read it in for you. See ?Startup in R for help. Microsoft: Get a key by creating an Azure account at https://www.microsoft.com/cognitive-services/en-us/subscriptions, then requesting a key for Academic Knowledge API within Cognitive Services. Store it as an environment variable in your .Renviron file - see [Startup] for help. Pass your API key into maopts as a named element in a list like list(key = Sys.getenv('MICROSOFT_ACADEMIC_KEY')) Crossref: Crossref encourages requests with contact information (an email address) and will forward you to a dedicated API cluster for improved performance when you share your email address with them. https://github.com/CrossRef/rest-api-doc#good-manners--more-reliable-service To pass your email address to Crossref via this client, store it as an environment variable in .Renviron like crossref_email = name@example.com None needed for PLOS, eLife, arxiv, biorxiv, Euro PMC, or Entrez (though soon you will get better rate limtits with auth for Entrez) "],
["search.html", "Chapter 5 Search 5.1 Usage", " Chapter 5 Search Search is what you’ll likely start with for a number of reasons. First, search functionality in fulltext means that you can start from searching on words like ‘ecology’ or ‘cellular’ - and the output of that search can be fed downstream to the next major task: fetching articles. 5.1 Usage library(fulltext) List backends available ft_search_ls() #&gt; [1] &quot;arxiv&quot; &quot;biorxivr&quot; &quot;bmc&quot; &quot;crossref&quot; &quot;entrez&quot; #&gt; [6] &quot;europe_pmc&quot; &quot;ma&quot; &quot;plos&quot; &quot;scopus&quot; Search - by default searches against PLOS (Public Library of Science) res &lt;- ft_search(query = &quot;ecology&quot;) The output of ft_search is a ft S3 object, with a summary of the results: res #&gt; Query: #&gt; [ecology] #&gt; Found: #&gt; [PLoS: 41094; BMC: 0; Crossref: 0; Entrez: 0; arxiv: 0; biorxiv: 0; Europe PMC: 0; Scopus: 0; Microsoft: 0] #&gt; Returned: #&gt; [PLoS: 10; BMC: 0; Crossref: 0; Entrez: 0; arxiv: 0; biorxiv: 0; Europe PMC: 0; Scopus: 0; Microsoft: 0] and has slots for each data source: names(res) #&gt; [1] &quot;plos&quot; &quot;bmc&quot; &quot;crossref&quot; &quot;entrez&quot; &quot;arxiv&quot; &quot;biorxiv&quot; #&gt; [7] &quot;europmc&quot; &quot;scopus&quot; &quot;ma&quot; Get data for a single source res$plos #&gt; Query: [ecology] #&gt; Records found, returned: [41094, 10] #&gt; License: [CC-BY] #&gt; id #&gt; 1 10.1371/journal.pone.0001248 #&gt; 2 10.1371/journal.pone.0059813 #&gt; 3 10.1371/journal.pone.0155019 #&gt; 4 10.1371/journal.pone.0080763 #&gt; 5 10.1371/journal.pone.0150648 #&gt; 6 10.1371/journal.pcbi.1003594 #&gt; 7 10.1371/journal.pone.0102437 #&gt; 8 10.1371/journal.pone.0175014 #&gt; 9 10.1371/journal.pone.0166559 #&gt; 10 10.1371/journal.pone.0054689 "],
["links.html", "Chapter 6 Links", " Chapter 6 Links links "],
["fetch.html", "Chapter 7 Fetch", " Chapter 7 Fetch fetch "],
["chunks.html", "Chapter 8 Chunks", " Chapter 8 Chunks chunks "],
["supplementary.html", "Chapter 9 Supplementary", " Chapter 9 Supplementary supplementary "],
["use-cases.html", "Chapter 10 Use cases", " Chapter 10 Use cases use cases "],
["literature.html", "Chapter 11 Literature", " Chapter 11 Literature Here is a review of existing methods. "]
]
